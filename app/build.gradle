apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

static def getInstrumentation(Project project) {
    project.hasProperty('cucumber') ? "com.calculator.runner.CucumberTestRunner" : "androidx.test.runner.AndroidJUnitRunner"
}

def getTestTags() {
    project.getProperties().get('tags') ?: ''
}

def getTestScenario() {
    project.getProperties().get('scenario') ?: ''
}


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.cvcheck"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner getInstrumentation(project)

        buildConfigField 'String', 'TEST_TAGS', '"' + getTestTags() + '"'
        buildConfigField 'String', 'TEST_SCENARIO', '"' + getTestScenario() + '"'
    }
    buildTypes {
        def SERVER_PROD = "SERVER_PRODUCTION"
        def SERVER_STAG = "SERVER_STAGING"
        def SERVER_DEV = "SERVER_DEVELOPMENT"
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            versionNameSuffix "-debug"
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }

    dataBinding {
        enabled = true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    testOptions {
        animationsDisabled = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /* Kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    /* OkHttp + Okio */
    implementation "com.squareup.okio:okio:$okio_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    /* Retrofit */
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //Logging Network Calls
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor_version"

    // Room
    implementation "androidx.room:room-runtime:2.1.0-alpha06"
    kapt "androidx.room:room-compiler:2.1.0-alpha06"

    /* Glide */
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'info.cukes:cucumber-android:1.2.5'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.5'
    androidTestImplementation 'info.cukes:cucumber-junit:1.2.5'
    testImplementation "io.cucumber:cucumber-java:4.7.4"
    testImplementation "io.cucumber:cucumber-junit:4.7.4"
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'

    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'org.powermock:powermock-core:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.0-beta.5'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'junit:junit:4.12'

}
